"""add_username_support_for_pilot_users

Revision ID: 48522185c7e1
Revises: 05a5c0b7f56a
Create Date: 2025-07-11 11:37:12.959808

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '48522185c7e1'
down_revision: Union[str, None] = '05a5c0b7f56a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.String(length=50), nullable=True))
    op.alter_column('users', 'phone_number',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    
    # Add check constraint to ensure either phone_number or username exists
    op.create_check_constraint(
        'check_user_has_identifier', 
        'users', 
        'phone_number IS NOT NULL OR username IS NOT NULL'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop check constraint first
    op.drop_constraint('check_user_has_identifier', 'users', type_='check')
    
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.alter_column('users', 'phone_number',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.drop_column('users', 'username')
    # ### end Alembic commands ###
